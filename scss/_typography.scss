/*! Custom typography styles */

/* Thanks to Greg Rickaby: http://gregrickaby.com/using-the-golden-ratio-and-rems/ */

$baseFontSize: 10; // Based on HTML reset html { font-size: 62.5%; }

@function parseInt($n) {
  @return $n / ($n * 0 + 1);
}

@mixin rem($property, $values) {
  $px : null;
  $rem: null;

  $root: $baseFontSize;

  @each $value in $values {
    @if $value == 0 or $value == auto {
      $px : append($px , $value);
      $rem: append($rem, $value);
    }

    @else if type-of($value) == number {
      // Assume pixels if unitless
      @if unitless($value) {
        $value: $value * 1px;
      }
      $unit: unit($value);
      $val: parseInt($value);

      @if $unit == "px" {
        $px : append($px,  $value);
        $rem: append($rem, ($val / $root + rem));
      }

      @if $unit == "rem" {
        $px : append($px,  ($val * $root + px));
        $rem: append($rem, $value);
      }
    }

    @else {
      $px : append($px,  $value);
      $rem: append($rem, $value);
    }
  }

  @if $px == $rem {
    #{$property}: $px;
  } @else {
    #{$property}: $px;
    #{$property}: $rem;
  }
}

@function rem($value) {
  $root: $baseFontSize;
  $val: parseInt($value);
  $return: ();

  @if unit($value) == "px" {
    $return: append($return, ($val / $root + rem));
  } @else {
    $return: append($return, ($val * $root + px));
  }

  @return $return;
}